import findKey from 'lodash-es/findKey';

var titleCSS = 'color:red; font-size:20px; font-weight: bold;';
var descCSS = function descCSS(color) {
  return 'font-size: 16px; color:' + color + ';';
};
var descDefaultCSS = descCSS('#000');
var descDefaultItalicCSS = descCSS('#000') + 'font-style:italic;';
var descKeywordCSS = descCSS('#008') + 'font-weight:600;';
var descStringCSS = descCSS('#080');
var descCommentCSS = descCSS('#808080') + 'font-style:italic;';
var descNewLine = 'font-size: 1px; margin-right: 100%;';

var moduleToImportPath = {
  more: 'highcharts-more',
  threeD: 'highcharts-3d',
  funnel: 'modules/funnel',
  sankey: 'modules/sankey',
  solidgauge: 'modules/solid-gauge',
  streamgraph: 'modules/streamgraph',
  treemap: 'modules/treemap'
};

var moduleToVarName = {
  more: 'addHighchartsMore',
  threeD: 'addHighcharts3DModule',
  funnel: 'addFunnelModule',
  sankey: 'addSankeyModule',
  solidgauge: 'addSolidGaugeModule',
  streamgraph: 'addStreamGraphModule',
  treemap: 'addTreemapModule'
};

var moduleToSeriesTypes = {
  more: ['arearange', 'areasplinerange', 'boxplot', 'bubble', 'columnrange', 'errorbar', 'polygon', 'waterfall', 'gauge'],
  funnel: ['funnel', 'pyramid'],
  sankey: ['sankey'],
  solidgauge: ['solidgauge'],
  streamgraph: ['streamgraph'],
  treemap: ['treemap']
};

var findModule = function findModule(seriesType) {
  return findKey(moduleToSeriesTypes, function (seriesTypes) {
    return seriesTypes.indexOf(seriesType) !== -1;
  });
};

var logDetailedErrorMessage = function logDetailedErrorMessage(warning, module) {
  var importPath = moduleToImportPath[module];
  var varName = moduleToVarName[module];

  console.group("React JSX Highcharts error");
  console.log('%c' + warning, titleCSS);
  console.log('More information: https://github.com/whawker/react-jsx-highcharts/wiki/Highcharts-error-%2317');
  console.log(('You likely need to import the additional module, try adding \n    %c  \n    %c %cimport %cHighcharts %cfrom %c\'highcharts\'%c;\n    %c %cimport %c' + varName + ' %cfrom %c\'highcharts/' + importPath + '\'%c;\n    %c\n    %c %c// After imports, but before component - apply additional functionality from module to Highcharts\n    %c %c' + varName + '%c(Highcharts);').replace(/^ +/gm, ''), descNewLine, descNewLine, descKeywordCSS, descDefaultCSS, descKeywordCSS, descStringCSS, descDefaultCSS, descNewLine, descKeywordCSS, descDefaultCSS, descKeywordCSS, descStringCSS, descDefaultCSS, descNewLine, descNewLine, descCommentCSS, descNewLine, descDefaultItalicCSS, descDefaultCSS);
  console.groupEnd();
};

export var logSeriesErrorMessage = function logSeriesErrorMessage(seriesType) {
  if (process.env.NODE_ENV === 'development') {
    var warning = 'This series type "' + seriesType + '" requires an additional Highcharts module';
    var module = findModule(seriesType);

    if (!module) {
      console.warn(warning + ', or is invalid.');
      return;
    }

    logDetailedErrorMessage(warning, module);
  }
};

export var logZAxisErrorMessage = function logZAxisErrorMessage() {
  if (process.env.NODE_ENV === 'development') {
    logDetailedErrorMessage('This axis type "ZAxis" requires an additional Highcharts module', 'threeD');
  }
};